
class Solution {
    public boolean cycle(int s,boolean[] vis,boolean[] curr,ArrayList<ArrayList<Integer>> adj){
        vis[s]=true;
        curr[s]=true;
        for(Integer it: adj.get(s)){
            if(vis[it]==false){
                if(cycle(it,vis,curr,adj)){
                    return true;
                }
            }
            else if(vis[it]==true && curr[it]==true){
                return true;
            }
        }
        curr[s]=false;
        return false;
    }
    // Function to detect cycle in a directed graph.
    public boolean isCyclic(int V, ArrayList<ArrayList<Integer>> adj) {
        boolean[] vis=new boolean[V];
        boolean[] curr=new boolean[V];
        for(int i=0;i<V;i++){
            if(vis[i]==false){
                if(cycle(i,vis,curr,adj)){
                    return true;
                }
            }
        }
        return false;
    }
}
