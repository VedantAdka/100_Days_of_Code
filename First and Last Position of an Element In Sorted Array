int FirstPos(vector<int>& arr,int n,int k){
    int first=-1;
    int low=0;
    int high=n-1;
    while(low<=high){
        int mid=(low+high)/2;
        if(arr[mid]==k){
            first=mid;
            high=mid-1;
        }
        else if(arr[mid]<k){
            low=mid+1;
        }
        else{
            high=mid-1;
        }
    }
    return first;
}
int LastPos(vector<int>& arr,int n,int k){
    int last=-1;
    int low=0;
    int high=n-1;
    while(low<=high){
        int mid=(low+high)/2;
        if(arr[mid]==k){
            last=mid;
            low=mid+1;
        }
        else if(arr[mid]<k){
            low=mid+1;
        }
        else{
            high=mid-1;
        }
    }
    return last;
}

pair<int, int> firstAndLastPosition(vector<int>& arr, int n, int k)
{
    pair <int,int>ans;
    int first=FirstPos(arr,n,k);
    if(first==-1){
        return ans={-1,-1};
    }
    int last=LastPos(arr,n,k);
    return ans={first,last};
}
