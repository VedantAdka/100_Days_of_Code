int FirstPos(vector<int>& arr,int n,int k){
    int first=-1;
    int low=0;
    int high=n-1;
    while(low<=high){
        int mid=(low+high)/2;
        if(arr[mid]==k){
            first=mid;
            high=mid-1;
        }
        else if(arr[mid]<k){
            low=mid+1;
        }
        else{
            high=mid-1;
        }
    }
    return first;
}
int LastPos(vector<int>& arr,int n,int k){
    int last=-1;
    int low=0;
    int high=n-1;
    while(low<=high){
        int mid=(low+high)/2;
        if(arr[mid]==k){
            last=mid;
            low=mid+1;
        }
        else if(arr[mid]<k){
            low=mid+1;
        }
        else{
            high=mid-1;
        }
    }
    return last;
}
int count(vector<int>& arr, int n, int x) {
	int ans;
	int first=FirstPos(arr,n,x);
	if(first==-1){
		return 0;
	}
	int last=LastPos(arr,n,x);
	return last-first+1;
}
